# ***** BEGIN LICENSE BLOCK *****
#  Version: GPL 3
# 
#  This program is Copyright (C) 2007-2008 Aptana, Inc. All Rights Reserved
#  This program is licensed under the GNU General Public license, version 3 (GPL).
# 
#  This program is distributed in the hope that it will be useful, but
#  AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or
#  NONINFRINGEMENT. Redistribution, except as permitted by the GPL,
#  is prohibited.
# 
#  You can redistribute and/or modify this program under the terms of the GPL, 
#  as published by the Free Software Foundation.  You should
#  have received a copy of the GNU General Public License, Version 3 along
#  with this program; if not, write to the Free Software Foundation, Inc., 51
#  Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#  
#  Aptana provides a special exception to allow redistribution of this file
#  with certain other code and certain additional terms
#  pursuant to Section 7 of the GPL. You may view the exception and these
#  terms on the web at http://www.aptana.com/legal/gpl/.
#  
#  You may view the GPL, and Aptana's exception and additional terms in the file
#  titled license-jaxer.html in the main distribution folder of this program.
#  
#  Any modifications to this file must keep this entire header intact.
# 
# ***** END LICENSE BLOCK *****


DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

ifeq (,$(filter-out WINNT Darwin,$(OS_ARCH)))
PROGRAM = JaxerLogger$(BIN_SUFFIX)
else
PROGRAM = jaxerlogger$(BIN_SUFFIX)
endif

DIST_PROGRAM = $(PROGRAM)

REQUIRES	= \
		$(NULL)

LOCAL_INCLUDES += -I$(srcdir) \
                  -I$(srcdir)/.. \
                  -I$(topsrcdir)/toolkit/crashreporter/google-breakpad/src \
                  $(NULL)

CPPSRCS = $(NULL)
ifeq ($(OS_ARCH),WINNT)
CPPSRCS += LogServerWin.cpp
else
CPPSRCS += LogServerUnix.cpp
LOCAL_INCLUDES += -I$(topsrcdir)/../libevent/libevent-1.4.2-rc
endif


ifeq ($(OS_ARCH),WINNT)
OS_CXXFLAGS += -O2 -FD -EHsc -MD -Wp64 -Zi -TP
#OS_LDFLAGS +=  -PDB:JaxerLogger.pdb
OS_LIBS += $(call EXPAND_LIBNAME,comctl32 shell32 wininet shlwapi)
MOZ_WINCONSOLE = 1
endif

ifeq ($(OS_ARCH),Darwin)
OS_CXXFLAGS += -D_MAC
OS_LIBS += -framework Cocoa \
           -L$(topsrcdir)/../libevent/libevent-1.4.2-rc/.libs \
           -levent
endif

ifeq ($(OS_ARCH),Linux)
OS_CXXFLAGS += -frtti
OS_LDFLAGS += -lrt -dl -lm
OS_LIBS +=$(topsrcdir)/../libevent/libevent-1.4.2-rc/.libs/$(LIB_PREFIX)event.$(LIB_SUFFIX) 
ifeq ($(OS_TEST), x86_64)
DEFINES += -DLINUX_64
endif
endif

ifeq ($(OS_ARCH),SunOS)
DEFINES += -DSOLARIS -D_REENTRANT
OS_CXXFLAGS += $(MOZ_GTK2_CFLAGS) $(MOZ_GTHREAD_CFLAGS)
OS_LIBS += $(MOZ_GTK2_LIBS) $(MOZ_GTHREAD_LIBS)
OS_LDFLAGS +=  -lpthread -lssl -lelf -lxnet -lstdc++
OS_LIBS +=$(topsrcdir)/../libevent/libevent-1.4.2-rc/.libs/$(LIB_PREFIX)event.$(LIB_SUFFIX)
endif

ifdef 0
#Cannot have crashreport here

ifdef MOZ_CRASHREPORTER

DEFINES += -DENABLE_CRASHREPORTER
REQUIRES += crashreporter
CRASHREPORTER_LIBS = $(DEPTH)/toolkit/crashreporter/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX)
ifeq ($(OS_ARCH),WINNT)
CRASHREPORTER_LIBS += \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/windows/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/windows/$(LIB_PREFIX)breakpad_windows_common_s.$(LIB_SUFFIX)
endif

ifeq ($(OS_ARCH),Darwin)
CRASHREPORTER_LIBS += \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/mac/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/mac/$(LIB_PREFIX)breakpad_mac_common_s.$(LIB_SUFFIX)
OS_LDFLAGS += -lcrypto

endif

ifeq ($(OS_ARCH),Linux)
CRASHREPORTER_LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/linux/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/linux/$(LIB_PREFIX)breakpad_linux_common_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
  $(NULL)
endif

ifeq ($(OS_ARCH),SunOS)
CRASHREPORTER_LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/solaris/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/solaris/$(LIB_PREFIX)breakpad_solaris_common_s.$(LIB_SUFFIX) \
  $(NULL)
endif

ifeq ($(OS_ARCH),SunOS)
EXTRA_LIBS += -lelf -ldemangle -lCstd -lmd
endif

ifdef BUILD_STATIC_LIBS
EXTRA_LIBS += $(CRASHREPORTER_LIBS)
else
SHARED_LIBRARY_LIBS += $(CRASHREPORTER_LIBS)
endif
endif

endif

include $(topsrcdir)/config/rules.mk

OS_CXXFLAGS := $(filter-out -fno-rtti, $(CXXFLAGS))


